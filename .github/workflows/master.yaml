name: Master

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rust:latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo files
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build

  test:
    runs-on: ubuntu-latest
    container:
      image: rust:latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo files
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Test
        run: cargo test

  check-release:
    name: Check for release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get commit subject
        run: |
          echo ::set-env name=commit_subject::$(git log --format=%s -n 1 ${{ github.event.after }})
          echo ::set-env name=tag_name::$(echo "${{ commit_subject }}" | grep -oP '(?<=release\()(.*)(?=\))'

  release:
    name: Release master branch
    runs-on: ubuntu-latest
    if: startsWith(env.commit_subject, 'release') && !!tag_name
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          release_name: Release ${{ env.tag_name }}
          draft: false
          prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip