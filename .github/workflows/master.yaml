name: Master

# on:
#   push:
#     branches:
#       - master

on: push

jobs:
  build_test:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo files
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --release
      - name: Upload psk binary
        uses: actions/upload-artifact@v1
        with:
          name: psk
          path: target/release/psk
      - name: Test
        run: cargo test

  release:
    name: Release master branch
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v2
        # The `if` has to be duplicated on each steps because of a limitation
        # CF https://github.community/t/how-to-set-and-access-a-workflow-variable/17335
        if: startsWith(github.event.head_commit.message, 'release')
      - name: Get commit data
        if: startsWith(github.event.head_commit.message, 'release')
        run: |
          echo ::set-env name=TAG_NAME::$(echo "${{ github.event.head_commit.message }}" | grep -oP '(?<=release\()(.*)(?=\))')
      - name: Create Release
        if: startsWith(github.event.head_commit.message, 'release')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
      - name: Download binary psk
        if: startsWith(github.event.head_commit.message, 'release')
        uses: actions/download-artifact@v1
        with:
          name: psk
      - name: Upload Release Asset
        if: startsWith(github.event.head_commit.message, 'release')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./psk/psk
          asset_name: psk
          asset_content_type: application/octet-stream